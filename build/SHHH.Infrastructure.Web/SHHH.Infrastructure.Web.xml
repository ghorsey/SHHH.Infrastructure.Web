<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SHHH.Infrastructure.Web</name>
    </assembly>
    <members>
        <member name="T:SHHH.Infrastructure.Web.BasicRoleProvider`1">
            <summary>
            The basic role provider
            </summary>
            <typeparam name="T">The type of Identity the basic role provider works with</typeparam>
        </member>
        <member name="T:SHHH.Infrastructure.Web.IRoleProvider`1">
            <summary>
            A common interface for determining if an Identity is in a specific role
            </summary>
            <typeparam name="T">The class the role provider works with</typeparam>
        </member>
        <member name="M:SHHH.Infrastructure.Web.IRoleProvider`1.IsInRole(`0,System.String)">
            <summary>
            Determines whether the identity is in the specified role.
            </summary>
            <param name="identity">The identity.</param>
            <param name="role">The role.</param>
            <returns>
              <c>true</c> if the identity is in the specified role; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:SHHH.Infrastructure.Web.BasicRoleProvider`1.IsInRole(`0,System.String)">
            <summary>
            Determines whether the identity is in the specified role.
            </summary>
            <param name="identity">The identity.</param>
            <param name="role">The role.</param>
            <returns>
              <c>true</c> if identity is in the specified role; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:SHHH.Infrastructure.Web.CustomIdentity`1">
            <summary>
            A custom identity object
            </summary>
            <typeparam name="T">The type of the referenced identity</typeparam>
        </member>
        <member name="M:SHHH.Infrastructure.Web.CustomIdentity`1.#ctor(`0,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:SHHH.Infrastructure.Web.CustomIdentity`1"/> class.
            </summary>
            <param name="reference">The reference.</param>
            <param name="name">The name.</param>
            <param name="isAuthenticated">if set to <c>true</c> the identity is authenticated.</param>
            <exception cref="T:System.ArgumentNullException">The references parameter cannot be null</exception>
            <exception cref="T:System.ArgumentException">Cannot be null or empty;name</exception>
        </member>
        <member name="P:SHHH.Infrastructure.Web.CustomIdentity`1.AuthenticationType">
            <summary>
            Gets the type of authentication used.
            </summary>
            <returns>The type of authentication used to identify the user.</returns>
        </member>
        <member name="P:SHHH.Infrastructure.Web.CustomIdentity`1.IsAuthenticated">
            <summary>
            Gets or sets a value indicating whether the user has been authenticated.
            </summary>
            <returns>true if the user was authenticated; otherwise, false.</returns>
        </member>
        <member name="P:SHHH.Infrastructure.Web.CustomIdentity`1.Name">
            <summary>
            Gets the name of the current user.
            </summary>
            <returns>The name of the user on whose behalf the code is running.</returns>
        </member>
        <member name="P:SHHH.Infrastructure.Web.CustomIdentity`1.Reference">
            <summary>
            Gets the reference.
            </summary>
            <value>
            The reference.
            </value>
        </member>
        <member name="T:SHHH.Infrastructure.Web.CustomPrincipal`1">
            <summary>
            The common custom principal object
            </summary>
            <typeparam name="T">The type of the identity referenced by this principal implementation</typeparam>
        </member>
        <member name="M:SHHH.Infrastructure.Web.CustomPrincipal`1.#ctor(SHHH.Infrastructure.Web.CustomIdentity{`0},SHHH.Infrastructure.Web.IRoleProvider{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:SHHH.Infrastructure.Web.CustomPrincipal`1"/> class.
            </summary>
            <param name="identity">The identity.</param>
            <param name="roleProvider">The role provider.</param>
            <exception cref="T:System.ArgumentNullException">The identity or roleProvider arguments cannot be null</exception>
        </member>
        <member name="M:SHHH.Infrastructure.Web.CustomPrincipal`1.IsInRole(System.String)">
            <summary>
            Determines whether the current principal belongs to the specified role.
            </summary>
            <param name="role">The name of the role for which to check membership.</param>
            <returns>
            true if the current principal is a member of the specified role; otherwise, false.
            </returns>
        </member>
        <member name="P:SHHH.Infrastructure.Web.CustomPrincipal`1.Identity">
            <summary>
            Gets the identity of the current principal.
            </summary>
            <returns>The <see cref="T:System.Security.Principal.IIdentity" /> object associated with the current principal.</returns>
        </member>
        <member name="P:SHHH.Infrastructure.Web.CustomPrincipal`1.RoleProvider">
            <summary>
            Gets the role provider.
            </summary>
            <value>
            The role provider.
            </value>
        </member>
        <member name="T:SHHH.Infrastructure.Web.FormsAuthentication.BasicFormsAuthentication">
            <summary>
            The default forms authentication class
            </summary>
        </member>
        <member name="T:SHHH.Infrastructure.Web.FormsAuthentication.IFormsAuthenticationAdapter">
            <summary>
            The interface that captures all supported authentication methods
            </summary>
        </member>
        <member name="M:SHHH.Infrastructure.Web.FormsAuthentication.IFormsAuthenticationAdapter.SignOut">
            <summary>
            Signs the user out.
            </summary>
        </member>
        <member name="M:SHHH.Infrastructure.Web.FormsAuthentication.IFormsAuthenticationAdapter.SignIn(System.String,System.Boolean)">
            <summary>
            Signs the user in.
            </summary>
            <param name="username">The username.</param>
            <param name="createPersistentCookie">if set to <c>true</c> create persistent cookie.</param>
        </member>
        <member name="M:SHHH.Infrastructure.Web.FormsAuthentication.IFormsAuthenticationAdapter.GetRedirectUrl(System.String,System.Boolean)">
            <summary>
            Gets the redirect URL.
            </summary>
            <param name="username">The username.</param>
            <param name="createPersistentCookie">if set to <c>true</c> [create persistent cookie].</param>
            <returns>The redirect URL</returns>
        </member>
        <member name="P:SHHH.Infrastructure.Web.FormsAuthentication.IFormsAuthenticationAdapter.LoginUrl">
            <summary>
            Gets the login URL.
            </summary>
            <value>
            The login URL.
            </value>
        </member>
        <member name="M:SHHH.Infrastructure.Web.FormsAuthentication.BasicFormsAuthentication.SignOut">
            <summary>
            Signs the user out.
            </summary>
        </member>
        <member name="M:SHHH.Infrastructure.Web.FormsAuthentication.BasicFormsAuthentication.SignIn(System.String,System.Boolean)">
            <summary>
            Signs the user in.
            </summary>
            <param name="username">The username.</param>
            <param name="createPersistentCookie">if set to <c>true</c> create persistent cookie.</param>
        </member>
        <member name="M:SHHH.Infrastructure.Web.FormsAuthentication.BasicFormsAuthentication.GetRedirectUrl(System.String,System.Boolean)">
            <summary>
            Gets the redirect URL.
            </summary>
            <param name="username">The username.</param>
            <param name="createPersistentCookie">if set to <c>true</c> [create persistent cookie].</param>
            <returns>
            The redirect URL
            </returns>
        </member>
        <member name="P:SHHH.Infrastructure.Web.FormsAuthentication.BasicFormsAuthentication.LoginUrl">
            <summary>
            Gets the login URL.
            </summary>
            <value>
            The login URL.
            </value>
        </member>
    </members>
</doc>
